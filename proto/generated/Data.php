<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: mesh.proto

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 *
 * (Formerly called SubPacket)
 * The payload portion fo a packet, this is the actual bytes that are sent
 * inside a radio packet (because from/to are broken out by the comms library)
 *
 * Generated from protobuf message <code>Data</code>
 */
class Data extends \Google\Protobuf\Internal\Message
{
    /**
     *
     * Formerly named typ and of type Type
     *
     * Generated from protobuf field <code>.PortNum portnum = 1;</code>
     */
    private $portnum = 0;
    /**
     *
     * TODO: REPLACE
     *
     * Generated from protobuf field <code>bytes payload = 2;</code>
     */
    private $payload = '';
    /**
     *
     * Not normally used, but for testing a sender can request that recipient
     * responds in kind (i.e. if it received a position, it should unicast back it's position).
     * Note: that if you set this on a broadcast you will receive many replies.
     *
     * Generated from protobuf field <code>bool want_response = 3;</code>
     */
    private $want_response = false;
    /**
     *
     * The address of the destination node.
     * This field is is filled in by the mesh radio device software, application
     * layer software should never need it.
     * RouteDiscovery messages _must_ populate this.
     * Other message types might need to if they are doing multihop routing.
     *
     * Generated from protobuf field <code>fixed32 dest = 4;</code>
     */
    private $dest = 0;
    /**
     *
     * The address of the original sender for this message.
     * This field should _only_ be populated for reliable multihop packets (to keep
     * packets small).
     *
     * Generated from protobuf field <code>fixed32 source = 5;</code>
     */
    private $source = 0;
    /**
     *
     * Only used in routing or response messages.
     * Indicates the original message ID that this message is reporting failure on. (formerly called original_id)
     *
     * Generated from protobuf field <code>fixed32 request_id = 6;</code>
     */
    private $request_id = 0;
    /**
     *
     * If set, this message is intened to be a reply to a previously sent message with the defined id.
     *
     * Generated from protobuf field <code>fixed32 reply_id = 7;</code>
     */
    private $reply_id = 0;
    /**
     *
     * Defaults to false. If true, then what is in the payload should be treated as an emoji like giving
     * a message a heart or poop emoji.
     *
     * Generated from protobuf field <code>fixed32 emoji = 8;</code>
     */
    private $emoji = 0;

    public function __construct() {
        \GPBMetadata\Mesh::initOnce();
        parent::__construct();
    }

    /**
     *
     * Formerly named typ and of type Type
     *
     * Generated from protobuf field <code>.PortNum portnum = 1;</code>
     * @return int
     */
    public function getPortnum()
    {
        return $this->portnum;
    }

    /**
     *
     * Formerly named typ and of type Type
     *
     * Generated from protobuf field <code>.PortNum portnum = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setPortnum($var)
    {
        GPBUtil::checkEnum($var, \PortNum::class);
        $this->portnum = $var;

        return $this;
    }

    /**
     *
     * TODO: REPLACE
     *
     * Generated from protobuf field <code>bytes payload = 2;</code>
     * @return string
     */
    public function getPayload()
    {
        return $this->payload;
    }

    /**
     *
     * TODO: REPLACE
     *
     * Generated from protobuf field <code>bytes payload = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setPayload($var)
    {
        GPBUtil::checkString($var, False);
        $this->payload = $var;

        return $this;
    }

    /**
     *
     * Not normally used, but for testing a sender can request that recipient
     * responds in kind (i.e. if it received a position, it should unicast back it's position).
     * Note: that if you set this on a broadcast you will receive many replies.
     *
     * Generated from protobuf field <code>bool want_response = 3;</code>
     * @return bool
     */
    public function getWantResponse()
    {
        return $this->want_response;
    }

    /**
     *
     * Not normally used, but for testing a sender can request that recipient
     * responds in kind (i.e. if it received a position, it should unicast back it's position).
     * Note: that if you set this on a broadcast you will receive many replies.
     *
     * Generated from protobuf field <code>bool want_response = 3;</code>
     * @param bool $var
     * @return $this
     */
    public function setWantResponse($var)
    {
        GPBUtil::checkBool($var);
        $this->want_response = $var;

        return $this;
    }

    /**
     *
     * The address of the destination node.
     * This field is is filled in by the mesh radio device software, application
     * layer software should never need it.
     * RouteDiscovery messages _must_ populate this.
     * Other message types might need to if they are doing multihop routing.
     *
     * Generated from protobuf field <code>fixed32 dest = 4;</code>
     * @return int
     */
    public function getDest()
    {
        return $this->dest;
    }

    /**
     *
     * The address of the destination node.
     * This field is is filled in by the mesh radio device software, application
     * layer software should never need it.
     * RouteDiscovery messages _must_ populate this.
     * Other message types might need to if they are doing multihop routing.
     *
     * Generated from protobuf field <code>fixed32 dest = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setDest($var)
    {
        GPBUtil::checkUint32($var);
        $this->dest = $var;

        return $this;
    }

    /**
     *
     * The address of the original sender for this message.
     * This field should _only_ be populated for reliable multihop packets (to keep
     * packets small).
     *
     * Generated from protobuf field <code>fixed32 source = 5;</code>
     * @return int
     */
    public function getSource()
    {
        return $this->source;
    }

    /**
     *
     * The address of the original sender for this message.
     * This field should _only_ be populated for reliable multihop packets (to keep
     * packets small).
     *
     * Generated from protobuf field <code>fixed32 source = 5;</code>
     * @param int $var
     * @return $this
     */
    public function setSource($var)
    {
        GPBUtil::checkUint32($var);
        $this->source = $var;

        return $this;
    }

    /**
     *
     * Only used in routing or response messages.
     * Indicates the original message ID that this message is reporting failure on. (formerly called original_id)
     *
     * Generated from protobuf field <code>fixed32 request_id = 6;</code>
     * @return int
     */
    public function getRequestId()
    {
        return $this->request_id;
    }

    /**
     *
     * Only used in routing or response messages.
     * Indicates the original message ID that this message is reporting failure on. (formerly called original_id)
     *
     * Generated from protobuf field <code>fixed32 request_id = 6;</code>
     * @param int $var
     * @return $this
     */
    public function setRequestId($var)
    {
        GPBUtil::checkUint32($var);
        $this->request_id = $var;

        return $this;
    }

    /**
     *
     * If set, this message is intened to be a reply to a previously sent message with the defined id.
     *
     * Generated from protobuf field <code>fixed32 reply_id = 7;</code>
     * @return int
     */
    public function getReplyId()
    {
        return $this->reply_id;
    }

    /**
     *
     * If set, this message is intened to be a reply to a previously sent message with the defined id.
     *
     * Generated from protobuf field <code>fixed32 reply_id = 7;</code>
     * @param int $var
     * @return $this
     */
    public function setReplyId($var)
    {
        GPBUtil::checkUint32($var);
        $this->reply_id = $var;

        return $this;
    }

    /**
     *
     * Defaults to false. If true, then what is in the payload should be treated as an emoji like giving
     * a message a heart or poop emoji.
     *
     * Generated from protobuf field <code>fixed32 emoji = 8;</code>
     * @return int
     */
    public function getEmoji()
    {
        return $this->emoji;
    }

    /**
     *
     * Defaults to false. If true, then what is in the payload should be treated as an emoji like giving
     * a message a heart or poop emoji.
     *
     * Generated from protobuf field <code>fixed32 emoji = 8;</code>
     * @param int $var
     * @return $this
     */
    public function setEmoji($var)
    {
        GPBUtil::checkUint32($var);
        $this->emoji = $var;

        return $this;
    }

}

