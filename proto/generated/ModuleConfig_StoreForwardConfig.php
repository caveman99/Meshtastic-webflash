<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: module_config.proto

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 *
 * Store and Forward Module Config
 *
 * Generated from protobuf message <code>ModuleConfig.StoreForwardConfig</code>
 */
class ModuleConfig_StoreForwardConfig extends \Google\Protobuf\Internal\Message
{
    /**
     *
     * Enable the Store and Forward Module
     *
     * Generated from protobuf field <code>bool enabled = 1;</code>
     */
    private $enabled = false;
    /**
     *
     * TODO: REPLACE
     *
     * Generated from protobuf field <code>bool heartbeat = 2;</code>
     */
    private $heartbeat = false;
    /**
     *
     * TODO: REPLACE
     *
     * Generated from protobuf field <code>uint32 records = 3;</code>
     */
    private $records = 0;
    /**
     *
     * TODO: REPLACE
     *
     * Generated from protobuf field <code>uint32 history_return_max = 4;</code>
     */
    private $history_return_max = 0;
    /**
     *
     * TODO: REPLACE
     *
     * Generated from protobuf field <code>uint32 history_return_window = 5;</code>
     */
    private $history_return_window = 0;

    public function __construct() {
        \GPBMetadata\ModuleConfig::initOnce();
        parent::__construct();
    }

    /**
     *
     * Enable the Store and Forward Module
     *
     * Generated from protobuf field <code>bool enabled = 1;</code>
     * @return bool
     */
    public function getEnabled()
    {
        return $this->enabled;
    }

    /**
     *
     * Enable the Store and Forward Module
     *
     * Generated from protobuf field <code>bool enabled = 1;</code>
     * @param bool $var
     * @return $this
     */
    public function setEnabled($var)
    {
        GPBUtil::checkBool($var);
        $this->enabled = $var;

        return $this;
    }

    /**
     *
     * TODO: REPLACE
     *
     * Generated from protobuf field <code>bool heartbeat = 2;</code>
     * @return bool
     */
    public function getHeartbeat()
    {
        return $this->heartbeat;
    }

    /**
     *
     * TODO: REPLACE
     *
     * Generated from protobuf field <code>bool heartbeat = 2;</code>
     * @param bool $var
     * @return $this
     */
    public function setHeartbeat($var)
    {
        GPBUtil::checkBool($var);
        $this->heartbeat = $var;

        return $this;
    }

    /**
     *
     * TODO: REPLACE
     *
     * Generated from protobuf field <code>uint32 records = 3;</code>
     * @return int
     */
    public function getRecords()
    {
        return $this->records;
    }

    /**
     *
     * TODO: REPLACE
     *
     * Generated from protobuf field <code>uint32 records = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setRecords($var)
    {
        GPBUtil::checkUint32($var);
        $this->records = $var;

        return $this;
    }

    /**
     *
     * TODO: REPLACE
     *
     * Generated from protobuf field <code>uint32 history_return_max = 4;</code>
     * @return int
     */
    public function getHistoryReturnMax()
    {
        return $this->history_return_max;
    }

    /**
     *
     * TODO: REPLACE
     *
     * Generated from protobuf field <code>uint32 history_return_max = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setHistoryReturnMax($var)
    {
        GPBUtil::checkUint32($var);
        $this->history_return_max = $var;

        return $this;
    }

    /**
     *
     * TODO: REPLACE
     *
     * Generated from protobuf field <code>uint32 history_return_window = 5;</code>
     * @return int
     */
    public function getHistoryReturnWindow()
    {
        return $this->history_return_window;
    }

    /**
     *
     * TODO: REPLACE
     *
     * Generated from protobuf field <code>uint32 history_return_window = 5;</code>
     * @param int $var
     * @return $this
     */
    public function setHistoryReturnWindow($var)
    {
        GPBUtil::checkUint32($var);
        $this->history_return_window = $var;

        return $this;
    }

}

