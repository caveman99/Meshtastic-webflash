<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: module_config.proto

namespace ModuleConfig;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Serial Config
 *
 * Generated from protobuf message <code>ModuleConfig.SerialConfig</code>
 */
class SerialConfig extends \Google\Protobuf\Internal\Message
{
    /**
     * Preferences for the SerialModule
     * FIXME - Move this out of UserPreferences and into a section for module configuration.
     *
     * Generated from protobuf field <code>bool enabled = 1;</code>
     */
    protected $enabled = false;
    /**
     * TODO: REPLACE
     *
     * Generated from protobuf field <code>bool echo = 2;</code>
     */
    protected $echo = false;
    /**
     * TODO: REPLACE
     *
     * Generated from protobuf field <code>uint32 rxd = 3;</code>
     */
    protected $rxd = 0;
    /**
     * TODO: REPLACE
     *
     * Generated from protobuf field <code>uint32 txd = 4;</code>
     */
    protected $txd = 0;
    /**
     * TODO: REPLACE
     *
     * Generated from protobuf field <code>.ModuleConfig.SerialConfig.Serial_Baud baud = 5;</code>
     */
    protected $baud = 0;
    /**
     * TODO: REPLACE
     *
     * Generated from protobuf field <code>uint32 timeout = 6;</code>
     */
    protected $timeout = 0;
    /**
     * TODO: REPLACE
     *
     * Generated from protobuf field <code>.ModuleConfig.SerialConfig.Serial_Mode mode = 7;</code>
     */
    protected $mode = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type bool $enabled
     *           Preferences for the SerialModule
     *           FIXME - Move this out of UserPreferences and into a section for module configuration.
     *     @type bool $echo
     *           TODO: REPLACE
     *     @type int $rxd
     *           TODO: REPLACE
     *     @type int $txd
     *           TODO: REPLACE
     *     @type int $baud
     *           TODO: REPLACE
     *     @type int $timeout
     *           TODO: REPLACE
     *     @type int $mode
     *           TODO: REPLACE
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\ModuleConfig::initOnce();
        parent::__construct($data);
    }

    /**
     * Preferences for the SerialModule
     * FIXME - Move this out of UserPreferences and into a section for module configuration.
     *
     * Generated from protobuf field <code>bool enabled = 1;</code>
     * @return bool
     */
    public function getEnabled()
    {
        return $this->enabled;
    }

    /**
     * Preferences for the SerialModule
     * FIXME - Move this out of UserPreferences and into a section for module configuration.
     *
     * Generated from protobuf field <code>bool enabled = 1;</code>
     * @param bool $var
     * @return $this
     */
    public function setEnabled($var)
    {
        GPBUtil::checkBool($var);
        $this->enabled = $var;

        return $this;
    }

    /**
     * TODO: REPLACE
     *
     * Generated from protobuf field <code>bool echo = 2;</code>
     * @return bool
     */
    public function getEcho()
    {
        return $this->echo;
    }

    /**
     * TODO: REPLACE
     *
     * Generated from protobuf field <code>bool echo = 2;</code>
     * @param bool $var
     * @return $this
     */
    public function setEcho($var)
    {
        GPBUtil::checkBool($var);
        $this->echo = $var;

        return $this;
    }

    /**
     * TODO: REPLACE
     *
     * Generated from protobuf field <code>uint32 rxd = 3;</code>
     * @return int
     */
    public function getRxd()
    {
        return $this->rxd;
    }

    /**
     * TODO: REPLACE
     *
     * Generated from protobuf field <code>uint32 rxd = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setRxd($var)
    {
        GPBUtil::checkUint32($var);
        $this->rxd = $var;

        return $this;
    }

    /**
     * TODO: REPLACE
     *
     * Generated from protobuf field <code>uint32 txd = 4;</code>
     * @return int
     */
    public function getTxd()
    {
        return $this->txd;
    }

    /**
     * TODO: REPLACE
     *
     * Generated from protobuf field <code>uint32 txd = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setTxd($var)
    {
        GPBUtil::checkUint32($var);
        $this->txd = $var;

        return $this;
    }

    /**
     * TODO: REPLACE
     *
     * Generated from protobuf field <code>.ModuleConfig.SerialConfig.Serial_Baud baud = 5;</code>
     * @return int
     */
    public function getBaud()
    {
        return $this->baud;
    }

    /**
     * TODO: REPLACE
     *
     * Generated from protobuf field <code>.ModuleConfig.SerialConfig.Serial_Baud baud = 5;</code>
     * @param int $var
     * @return $this
     */
    public function setBaud($var)
    {
        GPBUtil::checkEnum($var, \ModuleConfig\SerialConfig\Serial_Baud::class);
        $this->baud = $var;

        return $this;
    }

    /**
     * TODO: REPLACE
     *
     * Generated from protobuf field <code>uint32 timeout = 6;</code>
     * @return int
     */
    public function getTimeout()
    {
        return $this->timeout;
    }

    /**
     * TODO: REPLACE
     *
     * Generated from protobuf field <code>uint32 timeout = 6;</code>
     * @param int $var
     * @return $this
     */
    public function setTimeout($var)
    {
        GPBUtil::checkUint32($var);
        $this->timeout = $var;

        return $this;
    }

    /**
     * TODO: REPLACE
     *
     * Generated from protobuf field <code>.ModuleConfig.SerialConfig.Serial_Mode mode = 7;</code>
     * @return int
     */
    public function getMode()
    {
        return $this->mode;
    }

    /**
     * TODO: REPLACE
     *
     * Generated from protobuf field <code>.ModuleConfig.SerialConfig.Serial_Mode mode = 7;</code>
     * @param int $var
     * @return $this
     */
    public function setMode($var)
    {
        GPBUtil::checkEnum($var, \ModuleConfig\SerialConfig\Serial_Mode::class);
        $this->mode = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(SerialConfig::class, \ModuleConfig_SerialConfig::class);

