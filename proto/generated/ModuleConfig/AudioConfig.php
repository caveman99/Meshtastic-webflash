<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: module_config.proto

namespace ModuleConfig;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Audio Config for codec2 voice
 *
 * Generated from protobuf message <code>ModuleConfig.AudioConfig</code>
 */
class AudioConfig extends \Google\Protobuf\Internal\Message
{
    /**
     * Whether Audio is enabled
     *
     * Generated from protobuf field <code>bool codec2_enabled = 1;</code>
     */
    protected $codec2_enabled = false;
    /**
     * PTT Pin
     *
     * Generated from protobuf field <code>uint32 ptt_pin = 2;</code>
     */
    protected $ptt_pin = 0;
    /**
     * The audio sample rate to use for codec2
     *
     * Generated from protobuf field <code>.ModuleConfig.AudioConfig.Audio_Baud bitrate = 3;</code>
     */
    protected $bitrate = 0;
    /**
     * I2S Word Select
     *
     * Generated from protobuf field <code>uint32 i2s_ws = 4;</code>
     */
    protected $i2s_ws = 0;
    /**
     * I2S Data IN
     *
     * Generated from protobuf field <code>uint32 i2s_sd = 5;</code>
     */
    protected $i2s_sd = 0;
    /**
     * I2S Data OUT
     *
     * Generated from protobuf field <code>uint32 i2s_din = 6;</code>
     */
    protected $i2s_din = 0;
    /**
     * I2S Clock
     *
     * Generated from protobuf field <code>uint32 i2s_sck = 7;</code>
     */
    protected $i2s_sck = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type bool $codec2_enabled
     *           Whether Audio is enabled
     *     @type int $ptt_pin
     *           PTT Pin
     *     @type int $bitrate
     *           The audio sample rate to use for codec2
     *     @type int $i2s_ws
     *           I2S Word Select
     *     @type int $i2s_sd
     *           I2S Data IN
     *     @type int $i2s_din
     *           I2S Data OUT
     *     @type int $i2s_sck
     *           I2S Clock
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\ModuleConfig::initOnce();
        parent::__construct($data);
    }

    /**
     * Whether Audio is enabled
     *
     * Generated from protobuf field <code>bool codec2_enabled = 1;</code>
     * @return bool
     */
    public function getCodec2Enabled()
    {
        return $this->codec2_enabled;
    }

    /**
     * Whether Audio is enabled
     *
     * Generated from protobuf field <code>bool codec2_enabled = 1;</code>
     * @param bool $var
     * @return $this
     */
    public function setCodec2Enabled($var)
    {
        GPBUtil::checkBool($var);
        $this->codec2_enabled = $var;

        return $this;
    }

    /**
     * PTT Pin
     *
     * Generated from protobuf field <code>uint32 ptt_pin = 2;</code>
     * @return int
     */
    public function getPttPin()
    {
        return $this->ptt_pin;
    }

    /**
     * PTT Pin
     *
     * Generated from protobuf field <code>uint32 ptt_pin = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setPttPin($var)
    {
        GPBUtil::checkUint32($var);
        $this->ptt_pin = $var;

        return $this;
    }

    /**
     * The audio sample rate to use for codec2
     *
     * Generated from protobuf field <code>.ModuleConfig.AudioConfig.Audio_Baud bitrate = 3;</code>
     * @return int
     */
    public function getBitrate()
    {
        return $this->bitrate;
    }

    /**
     * The audio sample rate to use for codec2
     *
     * Generated from protobuf field <code>.ModuleConfig.AudioConfig.Audio_Baud bitrate = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setBitrate($var)
    {
        GPBUtil::checkEnum($var, \ModuleConfig\AudioConfig\Audio_Baud::class);
        $this->bitrate = $var;

        return $this;
    }

    /**
     * I2S Word Select
     *
     * Generated from protobuf field <code>uint32 i2s_ws = 4;</code>
     * @return int
     */
    public function getI2SWs()
    {
        return $this->i2s_ws;
    }

    /**
     * I2S Word Select
     *
     * Generated from protobuf field <code>uint32 i2s_ws = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setI2SWs($var)
    {
        GPBUtil::checkUint32($var);
        $this->i2s_ws = $var;

        return $this;
    }

    /**
     * I2S Data IN
     *
     * Generated from protobuf field <code>uint32 i2s_sd = 5;</code>
     * @return int
     */
    public function getI2SSd()
    {
        return $this->i2s_sd;
    }

    /**
     * I2S Data IN
     *
     * Generated from protobuf field <code>uint32 i2s_sd = 5;</code>
     * @param int $var
     * @return $this
     */
    public function setI2SSd($var)
    {
        GPBUtil::checkUint32($var);
        $this->i2s_sd = $var;

        return $this;
    }

    /**
     * I2S Data OUT
     *
     * Generated from protobuf field <code>uint32 i2s_din = 6;</code>
     * @return int
     */
    public function getI2SDin()
    {
        return $this->i2s_din;
    }

    /**
     * I2S Data OUT
     *
     * Generated from protobuf field <code>uint32 i2s_din = 6;</code>
     * @param int $var
     * @return $this
     */
    public function setI2SDin($var)
    {
        GPBUtil::checkUint32($var);
        $this->i2s_din = $var;

        return $this;
    }

    /**
     * I2S Clock
     *
     * Generated from protobuf field <code>uint32 i2s_sck = 7;</code>
     * @return int
     */
    public function getI2SSck()
    {
        return $this->i2s_sck;
    }

    /**
     * I2S Clock
     *
     * Generated from protobuf field <code>uint32 i2s_sck = 7;</code>
     * @param int $var
     * @return $this
     */
    public function setI2SSck($var)
    {
        GPBUtil::checkUint32($var);
        $this->i2s_sck = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(AudioConfig::class, \ModuleConfig_AudioConfig::class);

