<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: module_config.proto

namespace ModuleConfig\CannedMessageConfig;

use UnexpectedValueException;

/**
 * TODO: REPLACE
 *
 * Protobuf type <code>ModuleConfig.CannedMessageConfig.InputEventChar</code>
 */
class InputEventChar
{
    /**
     * TODO: REPLACE
     *
     * Generated from protobuf enum <code>NONE = 0;</code>
     */
    const NONE = 0;
    /**
     * TODO: REPLACE
     *
     * Generated from protobuf enum <code>UP = 17;</code>
     */
    const UP = 17;
    /**
     * TODO: REPLACE
     *
     * Generated from protobuf enum <code>DOWN = 18;</code>
     */
    const DOWN = 18;
    /**
     * TODO: REPLACE
     *
     * Generated from protobuf enum <code>LEFT = 19;</code>
     */
    const LEFT = 19;
    /**
     * TODO: REPLACE
     *
     * Generated from protobuf enum <code>RIGHT = 20;</code>
     */
    const RIGHT = 20;
    /**
     * '\n'
     *
     * Generated from protobuf enum <code>SELECT = 10;</code>
     */
    const SELECT = 10;
    /**
     * TODO: REPLACE
     *
     * Generated from protobuf enum <code>BACK = 27;</code>
     */
    const BACK = 27;
    /**
     * TODO: REPLACE
     *
     * Generated from protobuf enum <code>CANCEL = 24;</code>
     */
    const CANCEL = 24;

    private static $valueToName = [
        self::NONE => 'NONE',
        self::UP => 'UP',
        self::DOWN => 'DOWN',
        self::LEFT => 'LEFT',
        self::RIGHT => 'RIGHT',
        self::SELECT => 'SELECT',
        self::BACK => 'BACK',
        self::CANCEL => 'CANCEL',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(InputEventChar::class, \ModuleConfig_CannedMessageConfig_InputEventChar::class);

