<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: module_config.proto

namespace ModuleConfig;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Preferences for the RangeTestModule
 *
 * Generated from protobuf message <code>ModuleConfig.RangeTestConfig</code>
 */
class RangeTestConfig extends \Google\Protobuf\Internal\Message
{
    /**
     * Enable the Range Test Module
     *
     * Generated from protobuf field <code>bool enabled = 1;</code>
     */
    protected $enabled = false;
    /**
     * Send out range test messages from this node
     *
     * Generated from protobuf field <code>uint32 sender = 2;</code>
     */
    protected $sender = 0;
    /**
     * Bool value indicating that this node should save a RangeTest.csv file. 
     * ESP32 Only
     *
     * Generated from protobuf field <code>bool save = 3;</code>
     */
    protected $save = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type bool $enabled
     *           Enable the Range Test Module
     *     @type int $sender
     *           Send out range test messages from this node
     *     @type bool $save
     *           Bool value indicating that this node should save a RangeTest.csv file. 
     *           ESP32 Only
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\ModuleConfig::initOnce();
        parent::__construct($data);
    }

    /**
     * Enable the Range Test Module
     *
     * Generated from protobuf field <code>bool enabled = 1;</code>
     * @return bool
     */
    public function getEnabled()
    {
        return $this->enabled;
    }

    /**
     * Enable the Range Test Module
     *
     * Generated from protobuf field <code>bool enabled = 1;</code>
     * @param bool $var
     * @return $this
     */
    public function setEnabled($var)
    {
        GPBUtil::checkBool($var);
        $this->enabled = $var;

        return $this;
    }

    /**
     * Send out range test messages from this node
     *
     * Generated from protobuf field <code>uint32 sender = 2;</code>
     * @return int
     */
    public function getSender()
    {
        return $this->sender;
    }

    /**
     * Send out range test messages from this node
     *
     * Generated from protobuf field <code>uint32 sender = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setSender($var)
    {
        GPBUtil::checkUint32($var);
        $this->sender = $var;

        return $this;
    }

    /**
     * Bool value indicating that this node should save a RangeTest.csv file. 
     * ESP32 Only
     *
     * Generated from protobuf field <code>bool save = 3;</code>
     * @return bool
     */
    public function getSave()
    {
        return $this->save;
    }

    /**
     * Bool value indicating that this node should save a RangeTest.csv file. 
     * ESP32 Only
     *
     * Generated from protobuf field <code>bool save = 3;</code>
     * @param bool $var
     * @return $this
     */
    public function setSave($var)
    {
        GPBUtil::checkBool($var);
        $this->save = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(RangeTestConfig::class, \ModuleConfig_RangeTestConfig::class);

