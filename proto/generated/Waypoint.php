<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: mesh.proto

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Waypoint message, used to share arbitrary locations across the mesh
 *
 * Generated from protobuf message <code>Waypoint</code>
 */
class Waypoint extends \Google\Protobuf\Internal\Message
{
    /**
     * Id of the waypoint
     *
     * Generated from protobuf field <code>uint32 id = 1;</code>
     */
    protected $id = 0;
    /**
     * latitude_i
     *
     * Generated from protobuf field <code>sfixed32 latitude_i = 2;</code>
     */
    protected $latitude_i = 0;
    /**
     * longitude_i
     *
     * Generated from protobuf field <code>sfixed32 longitude_i = 3;</code>
     */
    protected $longitude_i = 0;
    /**
     * Time the waypoint is to expire (epoch)
     *
     * Generated from protobuf field <code>uint32 expire = 4;</code>
     */
    protected $expire = 0;
    /**
     * If true, only allow the original sender to update the waypoint.
     *
     * Generated from protobuf field <code>bool locked = 5;</code>
     */
    protected $locked = false;
    /**
     * Name of the waypoint - max 30 chars
     *
     * Generated from protobuf field <code>string name = 6;</code>
     */
    protected $name = '';
    /**
     **
     * Description of the waypoint - max 100 chars
     *
     * Generated from protobuf field <code>string description = 7;</code>
     */
    protected $description = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $id
     *           Id of the waypoint
     *     @type int $latitude_i
     *           latitude_i
     *     @type int $longitude_i
     *           longitude_i
     *     @type int $expire
     *           Time the waypoint is to expire (epoch)
     *     @type bool $locked
     *           If true, only allow the original sender to update the waypoint.
     *     @type string $name
     *           Name of the waypoint - max 30 chars
     *     @type string $description
     *          *
     *           Description of the waypoint - max 100 chars
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Mesh::initOnce();
        parent::__construct($data);
    }

    /**
     * Id of the waypoint
     *
     * Generated from protobuf field <code>uint32 id = 1;</code>
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Id of the waypoint
     *
     * Generated from protobuf field <code>uint32 id = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkUint32($var);
        $this->id = $var;

        return $this;
    }

    /**
     * latitude_i
     *
     * Generated from protobuf field <code>sfixed32 latitude_i = 2;</code>
     * @return int
     */
    public function getLatitudeI()
    {
        return $this->latitude_i;
    }

    /**
     * latitude_i
     *
     * Generated from protobuf field <code>sfixed32 latitude_i = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setLatitudeI($var)
    {
        GPBUtil::checkInt32($var);
        $this->latitude_i = $var;

        return $this;
    }

    /**
     * longitude_i
     *
     * Generated from protobuf field <code>sfixed32 longitude_i = 3;</code>
     * @return int
     */
    public function getLongitudeI()
    {
        return $this->longitude_i;
    }

    /**
     * longitude_i
     *
     * Generated from protobuf field <code>sfixed32 longitude_i = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setLongitudeI($var)
    {
        GPBUtil::checkInt32($var);
        $this->longitude_i = $var;

        return $this;
    }

    /**
     * Time the waypoint is to expire (epoch)
     *
     * Generated from protobuf field <code>uint32 expire = 4;</code>
     * @return int
     */
    public function getExpire()
    {
        return $this->expire;
    }

    /**
     * Time the waypoint is to expire (epoch)
     *
     * Generated from protobuf field <code>uint32 expire = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setExpire($var)
    {
        GPBUtil::checkUint32($var);
        $this->expire = $var;

        return $this;
    }

    /**
     * If true, only allow the original sender to update the waypoint.
     *
     * Generated from protobuf field <code>bool locked = 5;</code>
     * @return bool
     */
    public function getLocked()
    {
        return $this->locked;
    }

    /**
     * If true, only allow the original sender to update the waypoint.
     *
     * Generated from protobuf field <code>bool locked = 5;</code>
     * @param bool $var
     * @return $this
     */
    public function setLocked($var)
    {
        GPBUtil::checkBool($var);
        $this->locked = $var;

        return $this;
    }

    /**
     * Name of the waypoint - max 30 chars
     *
     * Generated from protobuf field <code>string name = 6;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Name of the waypoint - max 30 chars
     *
     * Generated from protobuf field <code>string name = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     **
     * Description of the waypoint - max 100 chars
     *
     * Generated from protobuf field <code>string description = 7;</code>
     * @return string
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     **
     * Description of the waypoint - max 100 chars
     *
     * Generated from protobuf field <code>string description = 7;</code>
     * @param string $var
     * @return $this
     */
    public function setDescription($var)
    {
        GPBUtil::checkString($var, True);
        $this->description = $var;

        return $this;
    }

}

