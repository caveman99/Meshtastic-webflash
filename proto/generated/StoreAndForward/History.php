<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: storeforward.proto

namespace StoreAndForward;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * TODO: REPLACE
 *
 * Generated from protobuf message <code>StoreAndForward.History</code>
 */
class History extends \Google\Protobuf\Internal\Message
{
    /**
     * Number of that will be sent to the client
     *
     * Generated from protobuf field <code>uint32 history_messages = 1;</code>
     */
    protected $history_messages = 0;
    /**
     * The window of messages that was used to filter the history client requested
     *
     * Generated from protobuf field <code>uint32 window = 2;</code>
     */
    protected $window = 0;
    /**
     * The window of messages that was used to filter the history client requested
     *
     * Generated from protobuf field <code>uint32 last_request = 3;</code>
     */
    protected $last_request = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $history_messages
     *           Number of that will be sent to the client
     *     @type int $window
     *           The window of messages that was used to filter the history client requested
     *     @type int $last_request
     *           The window of messages that was used to filter the history client requested
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Storeforward::initOnce();
        parent::__construct($data);
    }

    /**
     * Number of that will be sent to the client
     *
     * Generated from protobuf field <code>uint32 history_messages = 1;</code>
     * @return int
     */
    public function getHistoryMessages()
    {
        return $this->history_messages;
    }

    /**
     * Number of that will be sent to the client
     *
     * Generated from protobuf field <code>uint32 history_messages = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setHistoryMessages($var)
    {
        GPBUtil::checkUint32($var);
        $this->history_messages = $var;

        return $this;
    }

    /**
     * The window of messages that was used to filter the history client requested
     *
     * Generated from protobuf field <code>uint32 window = 2;</code>
     * @return int
     */
    public function getWindow()
    {
        return $this->window;
    }

    /**
     * The window of messages that was used to filter the history client requested
     *
     * Generated from protobuf field <code>uint32 window = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setWindow($var)
    {
        GPBUtil::checkUint32($var);
        $this->window = $var;

        return $this;
    }

    /**
     * The window of messages that was used to filter the history client requested
     *
     * Generated from protobuf field <code>uint32 last_request = 3;</code>
     * @return int
     */
    public function getLastRequest()
    {
        return $this->last_request;
    }

    /**
     * The window of messages that was used to filter the history client requested
     *
     * Generated from protobuf field <code>uint32 last_request = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setLastRequest($var)
    {
        GPBUtil::checkUint32($var);
        $this->last_request = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(History::class, \StoreAndForward_History::class);

