<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: telemetry.proto

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Types of Measurements the telemetry module is equipped to handle
 *
 * Generated from protobuf message <code>Telemetry</code>
 */
class Telemetry extends \Google\Protobuf\Internal\Message
{
    /**
     * This is usually not sent over the mesh (to save space), but it is sent
     * from the phone so that the local device can set its RTC If it is sent over
     * the mesh (because there are devices on the mesh without GPS), it will only
     * be sent by devices which has a hardware GPS clock (IE Mobile Phone).
     * seconds since 1970
     *
     * Generated from protobuf field <code>fixed32 time = 1;</code>
     */
    protected $time = 0;
    protected $variant;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $time
     *           This is usually not sent over the mesh (to save space), but it is sent
     *           from the phone so that the local device can set its RTC If it is sent over
     *           the mesh (because there are devices on the mesh without GPS), it will only
     *           be sent by devices which has a hardware GPS clock (IE Mobile Phone).
     *           seconds since 1970
     *     @type \DeviceMetrics $device_metrics
     *           Key native device metrics such as battery level
     *     @type \EnvironmentMetrics $environment_metrics
     *           Weather station or other environmental metrics
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Telemetry::initOnce();
        parent::__construct($data);
    }

    /**
     * This is usually not sent over the mesh (to save space), but it is sent
     * from the phone so that the local device can set its RTC If it is sent over
     * the mesh (because there are devices on the mesh without GPS), it will only
     * be sent by devices which has a hardware GPS clock (IE Mobile Phone).
     * seconds since 1970
     *
     * Generated from protobuf field <code>fixed32 time = 1;</code>
     * @return int
     */
    public function getTime()
    {
        return $this->time;
    }

    /**
     * This is usually not sent over the mesh (to save space), but it is sent
     * from the phone so that the local device can set its RTC If it is sent over
     * the mesh (because there are devices on the mesh without GPS), it will only
     * be sent by devices which has a hardware GPS clock (IE Mobile Phone).
     * seconds since 1970
     *
     * Generated from protobuf field <code>fixed32 time = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setTime($var)
    {
        GPBUtil::checkUint32($var);
        $this->time = $var;

        return $this;
    }

    /**
     * Key native device metrics such as battery level
     *
     * Generated from protobuf field <code>.DeviceMetrics device_metrics = 2;</code>
     * @return \DeviceMetrics|null
     */
    public function getDeviceMetrics()
    {
        return $this->readOneof(2);
    }

    public function hasDeviceMetrics()
    {
        return $this->hasOneof(2);
    }

    /**
     * Key native device metrics such as battery level
     *
     * Generated from protobuf field <code>.DeviceMetrics device_metrics = 2;</code>
     * @param \DeviceMetrics $var
     * @return $this
     */
    public function setDeviceMetrics($var)
    {
        GPBUtil::checkMessage($var, \DeviceMetrics::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * Weather station or other environmental metrics
     *
     * Generated from protobuf field <code>.EnvironmentMetrics environment_metrics = 3;</code>
     * @return \EnvironmentMetrics|null
     */
    public function getEnvironmentMetrics()
    {
        return $this->readOneof(3);
    }

    public function hasEnvironmentMetrics()
    {
        return $this->hasOneof(3);
    }

    /**
     * Weather station or other environmental metrics
     *
     * Generated from protobuf field <code>.EnvironmentMetrics environment_metrics = 3;</code>
     * @param \EnvironmentMetrics $var
     * @return $this
     */
    public function setEnvironmentMetrics($var)
    {
        GPBUtil::checkMessage($var, \EnvironmentMetrics::class);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getVariant()
    {
        return $this->whichOneof("variant");
    }

}

