<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: storeforward.proto

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * TODO: REPLACE
 *
 * Generated from protobuf message <code>StoreAndForward</code>
 */
class StoreAndForward extends \Google\Protobuf\Internal\Message
{
    /**
     * TODO: REPLACE
     *
     * Generated from protobuf field <code>.StoreAndForward.RequestResponse rr = 1;</code>
     */
    protected $rr = 0;
    /**
     * TODO: REPLACE
     *
     * Generated from protobuf field <code>.StoreAndForward.Statistics stats = 2;</code>
     */
    protected $stats = null;
    /**
     * TODO: REPLACE
     *
     * Generated from protobuf field <code>.StoreAndForward.History history = 3;</code>
     */
    protected $history = null;
    /**
     * TODO: REPLACE
     *
     * Generated from protobuf field <code>.StoreAndForward.Heartbeat heartbeat = 4;</code>
     */
    protected $heartbeat = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $rr
     *           TODO: REPLACE
     *     @type \StoreAndForward\Statistics $stats
     *           TODO: REPLACE
     *     @type \StoreAndForward\History $history
     *           TODO: REPLACE
     *     @type \StoreAndForward\Heartbeat $heartbeat
     *           TODO: REPLACE
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Storeforward::initOnce();
        parent::__construct($data);
    }

    /**
     * TODO: REPLACE
     *
     * Generated from protobuf field <code>.StoreAndForward.RequestResponse rr = 1;</code>
     * @return int
     */
    public function getRr()
    {
        return $this->rr;
    }

    /**
     * TODO: REPLACE
     *
     * Generated from protobuf field <code>.StoreAndForward.RequestResponse rr = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setRr($var)
    {
        GPBUtil::checkEnum($var, \StoreAndForward\RequestResponse::class);
        $this->rr = $var;

        return $this;
    }

    /**
     * TODO: REPLACE
     *
     * Generated from protobuf field <code>.StoreAndForward.Statistics stats = 2;</code>
     * @return \StoreAndForward\Statistics|null
     */
    public function getStats()
    {
        return $this->stats;
    }

    public function hasStats()
    {
        return isset($this->stats);
    }

    public function clearStats()
    {
        unset($this->stats);
    }

    /**
     * TODO: REPLACE
     *
     * Generated from protobuf field <code>.StoreAndForward.Statistics stats = 2;</code>
     * @param \StoreAndForward\Statistics $var
     * @return $this
     */
    public function setStats($var)
    {
        GPBUtil::checkMessage($var, \StoreAndForward\Statistics::class);
        $this->stats = $var;

        return $this;
    }

    /**
     * TODO: REPLACE
     *
     * Generated from protobuf field <code>.StoreAndForward.History history = 3;</code>
     * @return \StoreAndForward\History|null
     */
    public function getHistory()
    {
        return $this->history;
    }

    public function hasHistory()
    {
        return isset($this->history);
    }

    public function clearHistory()
    {
        unset($this->history);
    }

    /**
     * TODO: REPLACE
     *
     * Generated from protobuf field <code>.StoreAndForward.History history = 3;</code>
     * @param \StoreAndForward\History $var
     * @return $this
     */
    public function setHistory($var)
    {
        GPBUtil::checkMessage($var, \StoreAndForward\History::class);
        $this->history = $var;

        return $this;
    }

    /**
     * TODO: REPLACE
     *
     * Generated from protobuf field <code>.StoreAndForward.Heartbeat heartbeat = 4;</code>
     * @return \StoreAndForward\Heartbeat|null
     */
    public function getHeartbeat()
    {
        return $this->heartbeat;
    }

    public function hasHeartbeat()
    {
        return isset($this->heartbeat);
    }

    public function clearHeartbeat()
    {
        unset($this->heartbeat);
    }

    /**
     * TODO: REPLACE
     *
     * Generated from protobuf field <code>.StoreAndForward.Heartbeat heartbeat = 4;</code>
     * @param \StoreAndForward\Heartbeat $var
     * @return $this
     */
    public function setHeartbeat($var)
    {
        GPBUtil::checkMessage($var, \StoreAndForward\Heartbeat::class);
        $this->heartbeat = $var;

        return $this;
    }

}

