<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: config.proto

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 *
 * Configuration
 *
 * Generated from protobuf message <code>Config.DeviceConfig</code>
 */
class Config_DeviceConfig extends \Google\Protobuf\Internal\Message
{
    /**
     *
     * Sets the role of node
     *
     * Generated from protobuf field <code>.Config.DeviceConfig.Role role = 1;</code>
     */
    private $role = 0;
    /**
     *
     * Disabling this will disable the SerialConsole by not initilizing the StreamAPI
     *
     * Generated from protobuf field <code>bool serial_enabled = 2;</code>
     */
    private $serial_enabled = false;
    /**
     *
     * By default we turn off logging as soon as an API client connects (to keep shared serial link quiet).
     * Set this to true to leave the debug log outputting even when API is active.
     *
     * Generated from protobuf field <code>bool debug_log_enabled = 3;</code>
     */
    private $debug_log_enabled = false;

    public function __construct() {
        \GPBMetadata\Config::initOnce();
        parent::__construct();
    }

    /**
     *
     * Sets the role of node
     *
     * Generated from protobuf field <code>.Config.DeviceConfig.Role role = 1;</code>
     * @return int
     */
    public function getRole()
    {
        return $this->role;
    }

    /**
     *
     * Sets the role of node
     *
     * Generated from protobuf field <code>.Config.DeviceConfig.Role role = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setRole($var)
    {
        GPBUtil::checkEnum($var, \Config_DeviceConfig_Role::class);
        $this->role = $var;

        return $this;
    }

    /**
     *
     * Disabling this will disable the SerialConsole by not initilizing the StreamAPI
     *
     * Generated from protobuf field <code>bool serial_enabled = 2;</code>
     * @return bool
     */
    public function getSerialEnabled()
    {
        return $this->serial_enabled;
    }

    /**
     *
     * Disabling this will disable the SerialConsole by not initilizing the StreamAPI
     *
     * Generated from protobuf field <code>bool serial_enabled = 2;</code>
     * @param bool $var
     * @return $this
     */
    public function setSerialEnabled($var)
    {
        GPBUtil::checkBool($var);
        $this->serial_enabled = $var;

        return $this;
    }

    /**
     *
     * By default we turn off logging as soon as an API client connects (to keep shared serial link quiet).
     * Set this to true to leave the debug log outputting even when API is active.
     *
     * Generated from protobuf field <code>bool debug_log_enabled = 3;</code>
     * @return bool
     */
    public function getDebugLogEnabled()
    {
        return $this->debug_log_enabled;
    }

    /**
     *
     * By default we turn off logging as soon as an API client connects (to keep shared serial link quiet).
     * Set this to true to leave the debug log outputting even when API is active.
     *
     * Generated from protobuf field <code>bool debug_log_enabled = 3;</code>
     * @param bool $var
     * @return $this
     */
    public function setDebugLogEnabled($var)
    {
        GPBUtil::checkBool($var);
        $this->debug_log_enabled = $var;

        return $this;
    }

}

