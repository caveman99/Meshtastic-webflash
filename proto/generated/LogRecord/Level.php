<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: mesh.proto

namespace LogRecord;

use UnexpectedValueException;

/**
 * Log levels, chosen to match python logging conventions.
 *
 * Protobuf type <code>LogRecord.Level</code>
 */
class Level
{
    /**
     * Log levels, chosen to match python logging conventions.
     *
     * Generated from protobuf enum <code>UNSET = 0;</code>
     */
    const PBUNSET = 0;
    /**
     * Log levels, chosen to match python logging conventions.
     *
     * Generated from protobuf enum <code>CRITICAL = 50;</code>
     */
    const CRITICAL = 50;
    /**
     * Log levels, chosen to match python logging conventions.
     *
     * Generated from protobuf enum <code>ERROR = 40;</code>
     */
    const ERROR = 40;
    /**
     * Log levels, chosen to match python logging conventions.
     *
     * Generated from protobuf enum <code>WARNING = 30;</code>
     */
    const WARNING = 30;
    /**
     * Log levels, chosen to match python logging conventions.
     *
     * Generated from protobuf enum <code>INFO = 20;</code>
     */
    const INFO = 20;
    /**
     * Log levels, chosen to match python logging conventions.
     *
     * Generated from protobuf enum <code>DEBUG = 10;</code>
     */
    const DEBUG = 10;
    /**
     * Log levels, chosen to match python logging conventions.
     *
     * Generated from protobuf enum <code>TRACE = 5;</code>
     */
    const TRACE = 5;

    private static $valueToName = [
        self::PBUNSET => 'UNSET',
        self::CRITICAL => 'CRITICAL',
        self::ERROR => 'ERROR',
        self::WARNING => 'WARNING',
        self::INFO => 'INFO',
        self::DEBUG => 'DEBUG',
        self::TRACE => 'TRACE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            $pbconst =  __CLASS__. '::PB' . strtoupper($name);
            if (!defined($pbconst)) {
                throw new UnexpectedValueException(sprintf(
                        'Enum %s has no value defined for name %s', __CLASS__, $name));
            }
            return constant($pbconst);
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Level::class, \LogRecord_Level::class);

