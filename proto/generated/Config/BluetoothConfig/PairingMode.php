<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: config.proto

namespace Config\BluetoothConfig;

use UnexpectedValueException;

/**
 * Protobuf type <code>Config.BluetoothConfig.PairingMode</code>
 */
class PairingMode
{
    /**
     * Device generates a random pin that will be shown on the screen of the device for pairing
     *
     * Generated from protobuf enum <code>RANDOM_PIN = 0;</code>
     */
    const RANDOM_PIN = 0;
    /**
     * Device requires a specified fixed pin for pairing
     *
     * Generated from protobuf enum <code>FIXED_PIN = 1;</code>
     */
    const FIXED_PIN = 1;
    /**
     * Device requires no pin for pairing
     *
     * Generated from protobuf enum <code>NO_PIN = 2;</code>
     */
    const NO_PIN = 2;

    private static $valueToName = [
        self::RANDOM_PIN => 'RANDOM_PIN',
        self::FIXED_PIN => 'FIXED_PIN',
        self::NO_PIN => 'NO_PIN',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(PairingMode::class, \Config_BluetoothConfig_PairingMode::class);

