<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: config.proto

namespace Config\NetworkConfig;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>Config.NetworkConfig.IpV4Config</code>
 */
class IpV4Config extends \Google\Protobuf\Internal\Message
{
    /**
     * Static IP address
     *
     * Generated from protobuf field <code>fixed32 ip = 1;</code>
     */
    protected $ip = 0;
    /**
     * Static gateway address
     *
     * Generated from protobuf field <code>fixed32 gateway = 2;</code>
     */
    protected $gateway = 0;
    /**
     * Static subnet mask
     *
     * Generated from protobuf field <code>fixed32 subnet = 3;</code>
     */
    protected $subnet = 0;
    /**
     * Static DNS server address
     *
     * Generated from protobuf field <code>fixed32 dns = 4;</code>
     */
    protected $dns = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $ip
     *           Static IP address
     *     @type int $gateway
     *           Static gateway address
     *     @type int $subnet
     *           Static subnet mask
     *     @type int $dns
     *           Static DNS server address
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Config::initOnce();
        parent::__construct($data);
    }

    /**
     * Static IP address
     *
     * Generated from protobuf field <code>fixed32 ip = 1;</code>
     * @return int
     */
    public function getIp()
    {
        return $this->ip;
    }

    /**
     * Static IP address
     *
     * Generated from protobuf field <code>fixed32 ip = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setIp($var)
    {
        GPBUtil::checkUint32($var);
        $this->ip = $var;

        return $this;
    }

    /**
     * Static gateway address
     *
     * Generated from protobuf field <code>fixed32 gateway = 2;</code>
     * @return int
     */
    public function getGateway()
    {
        return $this->gateway;
    }

    /**
     * Static gateway address
     *
     * Generated from protobuf field <code>fixed32 gateway = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setGateway($var)
    {
        GPBUtil::checkUint32($var);
        $this->gateway = $var;

        return $this;
    }

    /**
     * Static subnet mask
     *
     * Generated from protobuf field <code>fixed32 subnet = 3;</code>
     * @return int
     */
    public function getSubnet()
    {
        return $this->subnet;
    }

    /**
     * Static subnet mask
     *
     * Generated from protobuf field <code>fixed32 subnet = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setSubnet($var)
    {
        GPBUtil::checkUint32($var);
        $this->subnet = $var;

        return $this;
    }

    /**
     * Static DNS server address
     *
     * Generated from protobuf field <code>fixed32 dns = 4;</code>
     * @return int
     */
    public function getDns()
    {
        return $this->dns;
    }

    /**
     * Static DNS server address
     *
     * Generated from protobuf field <code>fixed32 dns = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setDns($var)
    {
        GPBUtil::checkUint32($var);
        $this->dns = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(IpV4Config::class, \Config_NetworkConfig_IpV4Config::class);

