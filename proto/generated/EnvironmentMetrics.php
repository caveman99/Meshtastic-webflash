<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: telemetry.proto

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 *
 * Weather station or other environmental metrics
 *
 * Generated from protobuf message <code>EnvironmentMetrics</code>
 */
class EnvironmentMetrics extends \Google\Protobuf\Internal\Message
{
    /**
     *
     * Temperature measured
     *
     * Generated from protobuf field <code>float temperature = 1;</code>
     */
    private $temperature = 0.0;
    /**
     *
     * Relative humidity percent measured
     *
     * Generated from protobuf field <code>float relative_humidity = 2;</code>
     */
    private $relative_humidity = 0.0;
    /**
     *
     * Barometric pressure in hPA measured
     *
     * Generated from protobuf field <code>float barometric_pressure = 3;</code>
     */
    private $barometric_pressure = 0.0;
    /**
     *
     * Gas resistance in mOhm measured
     *
     * Generated from protobuf field <code>float gas_resistance = 4;</code>
     */
    private $gas_resistance = 0.0;
    /**
     *
     * Voltage measured
     *
     * Generated from protobuf field <code>float voltage = 5;</code>
     */
    private $voltage = 0.0;
    /**
     *
     * Current measured
     *
     * Generated from protobuf field <code>float current = 6;</code>
     */
    private $current = 0.0;

    public function __construct() {
        \GPBMetadata\Telemetry::initOnce();
        parent::__construct();
    }

    /**
     *
     * Temperature measured
     *
     * Generated from protobuf field <code>float temperature = 1;</code>
     * @return float
     */
    public function getTemperature()
    {
        return $this->temperature;
    }

    /**
     *
     * Temperature measured
     *
     * Generated from protobuf field <code>float temperature = 1;</code>
     * @param float $var
     * @return $this
     */
    public function setTemperature($var)
    {
        GPBUtil::checkFloat($var);
        $this->temperature = $var;

        return $this;
    }

    /**
     *
     * Relative humidity percent measured
     *
     * Generated from protobuf field <code>float relative_humidity = 2;</code>
     * @return float
     */
    public function getRelativeHumidity()
    {
        return $this->relative_humidity;
    }

    /**
     *
     * Relative humidity percent measured
     *
     * Generated from protobuf field <code>float relative_humidity = 2;</code>
     * @param float $var
     * @return $this
     */
    public function setRelativeHumidity($var)
    {
        GPBUtil::checkFloat($var);
        $this->relative_humidity = $var;

        return $this;
    }

    /**
     *
     * Barometric pressure in hPA measured
     *
     * Generated from protobuf field <code>float barometric_pressure = 3;</code>
     * @return float
     */
    public function getBarometricPressure()
    {
        return $this->barometric_pressure;
    }

    /**
     *
     * Barometric pressure in hPA measured
     *
     * Generated from protobuf field <code>float barometric_pressure = 3;</code>
     * @param float $var
     * @return $this
     */
    public function setBarometricPressure($var)
    {
        GPBUtil::checkFloat($var);
        $this->barometric_pressure = $var;

        return $this;
    }

    /**
     *
     * Gas resistance in mOhm measured
     *
     * Generated from protobuf field <code>float gas_resistance = 4;</code>
     * @return float
     */
    public function getGasResistance()
    {
        return $this->gas_resistance;
    }

    /**
     *
     * Gas resistance in mOhm measured
     *
     * Generated from protobuf field <code>float gas_resistance = 4;</code>
     * @param float $var
     * @return $this
     */
    public function setGasResistance($var)
    {
        GPBUtil::checkFloat($var);
        $this->gas_resistance = $var;

        return $this;
    }

    /**
     *
     * Voltage measured
     *
     * Generated from protobuf field <code>float voltage = 5;</code>
     * @return float
     */
    public function getVoltage()
    {
        return $this->voltage;
    }

    /**
     *
     * Voltage measured
     *
     * Generated from protobuf field <code>float voltage = 5;</code>
     * @param float $var
     * @return $this
     */
    public function setVoltage($var)
    {
        GPBUtil::checkFloat($var);
        $this->voltage = $var;

        return $this;
    }

    /**
     *
     * Current measured
     *
     * Generated from protobuf field <code>float current = 6;</code>
     * @return float
     */
    public function getCurrent()
    {
        return $this->current;
    }

    /**
     *
     * Current measured
     *
     * Generated from protobuf field <code>float current = 6;</code>
     * @param float $var
     * @return $this
     */
    public function setCurrent($var)
    {
        GPBUtil::checkFloat($var);
        $this->current = $var;

        return $this;
    }

}

